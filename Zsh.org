#+TITLE: @pablobfonseca's ZSH Configuration
#+PROPERTY: header-args:shell :tangle ./zsh/zshrc :mkdirp yes

* Welcome to my Zsh Config
This file generates [[file:zshrc][zshrc]] file which can be loaded by ZSH at startup.
* envvars
#+begin_src shell :tangle ./zsh/zshenv
  export PATH="/usr/local/sbin:$PATH"
  export PATH="/usr/local/mysql/bin:$PATH"
  export HISTSIZE=20000
  export SAVEHIST=20000
  export DOTFILES=$HOME/.dotfiles
  export LC_ALL=en_US.UTF-8
  export LANG=en_US.UTF-8
  export CLICOLOR=1
#+end_src
** Go
#+begin_src shell :tangle ./zsh/zshenv
  export GOPATH=$HOME/code/go-workspace
  export GOROOT=/usr/local/opt/go/libexec
  export GOBIN=$GOPATH/bin
  export PATH=$PATH:$GOPATH/bin
  export PATH=$PATH:$GOROOT/bin
#+end_src
** Haskell
*** envvars
#+begin_src shell :tangle ./zsh/zshenv
  export PATH="$HOME/.local/bin:$PATH"

#+end_src

*** config
#+begin_src shell
  [ -f "$HOME/.ghcup/env" ] && source "$HOME/.ghcup/env" # ghcup-env
#+end_src
** Rust
#+begin_src shell :tangle ./zsh/zshenv
source "$HOME/.cargo/env"
#+end_src

* fzf
** envvars
#+begin_src shell :tangle ./zsh/zshenv
  export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob "!.git/*"'
  export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border'
  export FZF_CTRL_T_COMMAND=$FZF_DEFAULT_COMMAND
  export FZF_COMPLETE=1
#+end_src

** config
#+begin_src shell
  [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
#+end_src

* zsh-syntax-highlighting
#+begin_src shell
  source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
#+end_src

* Enable completion
#+begin_src shell
autoload -U compinit
compinit
#+end_src

* zplug
#+begin_src shell
source ~/.zplug/init.zsh
#+end_src
** Plugins
#+begin_src shell
  zplug "zsh-users/zsh-autosuggestions"
  zplug "b4b4r07/enhancd"

  # Install plugins if there are plugins that have not been installed
  if ! zplug check --verbose; then
      printf "Install? [y/N]: "
      if read -q; then
          echo; zplug install
      fi
  fi

  # Then, source plugins and add commands to $PATH
  zplug load
#+end_src
* httptoolkit
 This section will be reset each time a HTTP Toolkit terminal is opened
 #+begin_src shell
   if [ -n "$HTTP_TOOLKIT_ACTIVE" ]; then
       # When HTTP Toolkit is active, we inject various overrides into PATH
       export PATH="$HOME/.local/share/httptoolkit-server/client/1.0.2/overrides/path:$PATH"

       if command -v winpty >/dev/null 2>&1; then
           # Work around for winpty's hijacking of certain commands
           alias php=php
           alias node=node
       fi
   fi
 #+end_src

* rvm
#+begin_src shell :tangle ./zsh/zshenv
  # Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
  export PATH="$PATH:$HOME/.rvm/bin"
  export PATH="$HOME/.gem/bin:$PATH"
  export GEM_HOME=$HOME/.gem
  #+end_src

* nvm
** envvars
#+begin_src shell :tangle ./zsh/zshenv
export NVM_DIR="$HOME/.nvm"
#+end_src

** config
#+begin_src shell
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

  autoload -U add-zsh-hook
  load-nvmrc() {
      local node_version="$(nvm version)"
      local nvmrc_path="$(nvm_find_nvmrc)"

      if [ -n "$nvmrc_path" ]; then
          local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

          if [ "$nvmrc_node_version" = "N/A" ]; then
              nvm install
          elif [ "$nvmrc_node_version" != "$node_version" ]; then
              nvm use
          fi
      elif [ "$node_version" != "$(nvm version default)" ]; then
          echo "Reverting to nvm default version"
          nvm use default
      fi
  }
  add-zsh-hook chpwd load-nvmrc
  load-nvmrc
#+end_src

* Functions
** search_route
#+begin_src shell
function search_route {
  bin/rails routes | rg $1
}
#+end_src

** bundle_search
#+begin_src shell
  function bundle_search() {
      pattern="$1"; shift
      ag $pattern $(bundle show --paths "$@")
  }
#+end_src

** take
#+begin_src shell
  function take {
      mkdir $1
      cd $1
  }
#+end_src

** rvmlist
#+begin_src shell
  rvmlist() {
      local rb
      rb=$((echo system; rvm list | grep ruby | cut -c 4-) |
               awk '{print $1}' |
               fzf) && rvm use $rb
  }

#+end_src
** nvmlist
#+begin_src shell
  nvmlist() {
      local njs
      njs=$((nvm ls --no-colors --no-alias | cut -c 8-) | awk '{print $1}' | fzf) && nvm use $njs
  }
#+end_src

* Aliases
#+begin_src shell
  alias path="echo $PATH | tr -s ':' '\n'"
  alias reload!="source ~/.zshrc"
  alias brew_update="brew update && brew upgrade && brew cleanup"
  alias code="cd ~/code && cd"
  alias untar="tar -zxvf"
  alias genpass="openssl rand -base64 20"
  alias st="git st"
  alias check3000="lsof -i :3000"
  alias ll="ls -alF"
  alias vimup="nvim +PlugUpdate"
  alias bs="git bselect"
#+end_src

* Languages
** oCaml
#+begin_src shell
eval $(opam env)
#+end_src

* Starship theme
#+begin_src shell
  eval "$(starship init zsh)"
#+end_src
